/**
 * Local Facebook Messenger Test
 * Test Facebook API integration before deploying to Cloudflare Workers
 */

// Your Facebook credentials (we'll set these as env vars)
const FACEBOOK_PAGE_TOKEN = process.env.FACEBOOK_PAGE_TOKEN;
const FACEBOOK_RECIPIENT_ID = process.env.FACEBOOK_RECIPIENT_ID;

/**
 * Test Facebook Graph API connectivity
 */
async function testFacebookAPI() {
  console.log('🧪 Testing Facebook API...');
  
  if (!FACEBOOK_PAGE_TOKEN || !FACEBOOK_RECIPIENT_ID) {
    console.error('❌ Missing Facebook credentials');
    console.log('Set environment variables:');
    console.log('export FACEBOOK_PAGE_TOKEN="your_token"');
    console.log('export FACEBOOK_RECIPIENT_ID="your_recipient_id"');
    return;
  }
  
  console.log(`🔍 Token length: ${FACEBOOK_PAGE_TOKEN.length}`);
  console.log(`🔍 Recipient ID: ${FACEBOOK_RECIPIENT_ID}`);
  
  try {
    // Test 1: Verify token by getting page info
    console.log('\n📋 Test 1: Verifying token with Graph API...');
    const pageInfoResponse = await fetch(`https://graph.facebook.com/v18.0/me?access_token=${FACEBOOK_PAGE_TOKEN}`);
    const pageInfo = await pageInfoResponse.json();
    
    if (pageInfoResponse.ok) {
      console.log('✅ Token is valid!');
      console.log(`📄 Page: ${pageInfo.name} (ID: ${pageInfo.id})`);
    } else {
      console.log('❌ Token validation failed:');
      console.log(pageInfo);
      return;
    }
    
    // Test 2: Send a test message
    console.log('\n📨 Test 2: Sending test message...');
    const testMessage = `🧪 Local Test: ${new Date().toLocaleString()}\n\nTesting Facebook Messenger integration for TFT Trading System.\n\nIf you see this, the integration is working! 🎉`;
    
    const messageResponse = await fetch(`https://graph.facebook.com/v18.0/me/messages?access_token=${FACEBOOK_PAGE_TOKEN}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        recipient: {
          id: FACEBOOK_RECIPIENT_ID
        },
        message: {
          text: testMessage
        },
        messaging_type: 'MESSAGE_TAG',
        tag: 'ACCOUNT_UPDATE'
      })
    });
    
    const messageResult = await messageResponse.json();
    
    if (messageResponse.ok) {
      console.log('✅ Test message sent successfully!');
      console.log(`📨 Message ID: ${messageResult.message_id}`);
      console.log(`👤 Recipient ID: ${messageResult.recipient_id}`);
    } else {
      console.log('❌ Message sending failed:');
      console.log(messageResult);
    }
    
    // Test 3: Simulate trading summary message
    console.log('\n📊 Test 3: Sending trading summary...');
    const tradingSummary = `📊 Daily Trading Summary - ${new Date().toLocaleDateString()}\n\n📈 Today's Analysis (5 symbols):\n\n💭 AAPL: HOLD NEUTRAL\n   💰 $238.47 | 68.2%\n   NEUTRAL price prediction (TFT+N-HITS-Ensemble)...\n\n💭 TSLA: HOLD NEUTRAL\n   💰 $334.09 | 67.8%\n   NEUTRAL price prediction (TFT+N-HITS-Ensemble)...\n\n📊 Performance Metrics:\n• Success Rate: 100.0%\n• Average Confidence: 68.0%\n• High Confidence Signals: 0\n• Signal Distribution: {"BUY":0,"SELL":0,"HOLD":5}\n\n🤖 Generated by TFT Trading System`;
    
    const summaryResponse = await fetch(`https://graph.facebook.com/v18.0/me/messages?access_token=${FACEBOOK_PAGE_TOKEN}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        recipient: {
          id: FACEBOOK_RECIPIENT_ID
        },
        message: {
          text: tradingSummary
        },
        messaging_type: 'MESSAGE_TAG',
        tag: 'ACCOUNT_UPDATE'
      })
    });
    
    const summaryResult = await summaryResponse.json();
    
    if (summaryResponse.ok) {
      console.log('✅ Trading summary sent successfully!');
      console.log(`📨 Summary Message ID: ${summaryResult.message_id}`);
    } else {
      console.log('❌ Trading summary failed:');
      console.log(summaryResult);
    }
    
  } catch (error) {
    console.error('❌ Test failed with error:', error.message);
  }
}

// Run the test
testFacebookAPI();