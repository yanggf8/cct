/**
 * TFT Trading System Dashboard Animations & States
 * Error handling, loading states, and smooth animations
 */

/* Loading States */
.loading {
    position: relative;
    overflow: hidden;
}

.loading::after {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
        90deg,
        transparent,
        rgba(255, 255, 255, 0.2),
        transparent
    );
    animation: loading-shimmer 1.5s infinite;
    z-index: 1;
}

[data-theme="dark"] .loading::after {
    background: linear-gradient(
        90deg,
        transparent,
        rgba(255, 255, 255, 0.1),
        transparent
    );
}

@keyframes loading-shimmer {
    0% {
        left: -100%;
    }
    100% {
        left: 100%;
    }
}

/* Widget Refreshing Animation */
.widget.refreshing {
    position: relative;
    opacity: 0.7;
}

.widget.refreshing::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: linear-gradient(90deg, var(--accent-primary), var(--accent-secondary));
    animation: refresh-progress 1s ease-in-out;
    z-index: 10;
}

@keyframes refresh-progress {
    0% {
        transform: scaleX(0);
        transform-origin: left;
    }
    50% {
        transform: scaleX(1);
        transform-origin: left;
    }
    50.1% {
        transform: scaleX(1);
        transform-origin: right;
    }
    100% {
        transform: scaleX(0);
        transform-origin: right;
    }
}

/* Error States */
.error-state {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 2rem;
    text-align: center;
    color: var(--text-secondary);
}

.error-icon {
    font-size: 3rem;
    margin-bottom: 1rem;
    opacity: 0.5;
}

.error-title {
    font-size: 1.125rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
    color: var(--text-primary);
}

.error-message {
    font-size: 0.875rem;
    margin-bottom: 1rem;
    max-width: 300px;
}

.error-retry {
    background: var(--accent-primary);
    color: white;
    border: none;
    padding: 0.5rem 1rem;
    border-radius: var(--border-radius);
    cursor: pointer;
    font-size: 0.875rem;
    transition: all var(--transition-speed);
}

.error-retry:hover {
    background: var(--accent-primary);
    transform: translateY(-1px);
    box-shadow: var(--shadow-sm);
}

/* Empty States */
.empty-state {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 2rem;
    text-align: center;
    color: var(--text-secondary);
}

.empty-icon {
    font-size: 3rem;
    margin-bottom: 1rem;
    opacity: 0.3;
}

.empty-title {
    font-size: 1.125rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
    color: var(--text-primary);
}

.empty-message {
    font-size: 0.875rem;
    margin-bottom: 1rem;
    max-width: 300px;
}

/* Success Animations */
.success-checkmark {
    width: 60px;
    height: 60px;
    border-radius: 50%;
    background: var(--accent-success);
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto 1rem;
    animation: success-pop 0.5s ease-out;
}

.success-checkmark::after {
    content: 'âœ“';
    color: white;
    font-size: 2rem;
    font-weight: bold;
}

@keyframes success-pop {
    0% {
        transform: scale(0);
        opacity: 0;
    }
    50% {
        transform: scale(1.1);
    }
    100% {
        transform: scale(1);
        opacity: 1;
    }
}

/* Warning Animations */
.warning-pulse {
    display: inline-block;
    padding: 0.25rem 0.75rem;
    background: var(--accent-warning);
    color: white;
    border-radius: 1rem;
    font-size: 0.875rem;
    font-weight: 600;
    animation: warning-pulse 2s infinite;
}

@keyframes warning-pulse {
    0%, 100% {
        opacity: 1;
        transform: scale(1);
    }
    50% {
        opacity: 0.8;
        transform: scale(1.05);
    }
}

/* Data Update Animations */
.data-updated {
    animation: data-highlight 0.5s ease-out;
}

@keyframes data-highlight {
    0% {
        background: var(--accent-success);
        color: white;
    }
    100% {
        background: transparent;
        color: var(--text-primary);
    }
}

/* Alert Animations */
.alert-enter {
    animation: alert-slide-in 0.3s ease-out;
}

.alert-exit {
    animation: alert-slide-out 0.3s ease-in;
}

@keyframes alert-slide-in {
    from {
        transform: translateX(-100%);
        opacity: 0;
    }
    to {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes alert-slide-out {
    from {
        transform: translateX(0);
        opacity: 1;
    }
    to {
        transform: translateX(-100%);
        opacity: 0;
    }
}

/* Chart Animations */
.chart-container {
    position: relative;
}

.chart-loading {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(var(--bg-widget), 0.9);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 5;
}

.chart-loading-spinner {
    width: 40px;
    height: 40px;
    border: 3px solid var(--border-light);
    border-top: 3px solid var(--accent-primary);
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

/* Smooth Number Transitions */
.number-transition {
    transition: all 0.3s ease-out;
}

.number-changed {
    animation: number-change 0.5s ease-out;
}

@keyframes number-change {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.1);
        color: var(--accent-primary);
    }
    100% {
        transform: scale(1);
    }
}

/* Progress Indicators */
.progress-ring {
    transform: rotate(-90deg);
}

.progress-ring-circle {
    transition: stroke-dashoffset 0.35s;
    stroke: var(--accent-primary);
    stroke-width: 4;
    fill: transparent;
}

/* Status Indicators */
.status-indicator.active {
    animation: status-pulse 2s infinite;
}

@keyframes status-pulse {
    0%, 100% {
        box-shadow: 0 0 0 0 currentColor;
    }
    50% {
        box-shadow: 0 0 0 8px transparent;
    }
}

/* Tooltips */
.tooltip {
    position: relative;
    cursor: help;
}

.tooltip::before {
    content: attr(data-tooltip);
    position: absolute;
    bottom: 125%;
    left: 50%;
    transform: translateX(-50%);
    background: var(--bg-tertiary);
    color: var(--text-primary);
    padding: 0.5rem 0.75rem;
    border-radius: var(--border-radius);
    font-size: 0.875rem;
    white-space: nowrap;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease-out;
    z-index: 1000;
    border: 1px solid var(--border-color);
    box-shadow: var(--shadow);
}

.tooltip::after {
    content: '';
    position: absolute;
    bottom: 115%;
    left: 50%;
    transform: translateX(-50%);
    border: 5px solid transparent;
    border-top-color: var(--bg-tertiary);
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease-out;
}

.tooltip:hover::before,
.tooltip:hover::after {
    opacity: 1;
    visibility: visible;
}

/* Responsive Animations */
@media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}

/* Skeleton Loading */
.skeleton {
    background: linear-gradient(
        90deg,
        var(--bg-secondary) 25%,
        var(--bg-tertiary) 50%,
        var(--bg-secondary) 75%
    );
    background-size: 200% 100%;
    animation: skeleton-loading 1.5s infinite;
    border-radius: var(--border-radius);
}

@keyframes skeleton-loading {
    0% {
        background-position: 200% 0;
    }
    100% {
        background-position: -200% 0;
    }
}

.skeleton-text {
    height: 1rem;
    margin-bottom: 0.5rem;
    width: 100%;
}

.skeleton-text.short {
    width: 60%;
}

.skeleton-text.medium {
    width: 80%;
}

.skeleton-avatar {
    width: 40px;
    height: 40px;
    border-radius: 50%;
}

/* Connection Status Animations */
.connection-status.connecting {
    animation: connection-connecting 1s infinite;
}

.connection-status.connected {
    animation: connection-success 0.5s ease-out;
}

.connection-status.disconnected {
    animation: connection-error 0.5s ease-out;
}

@keyframes connection-connecting {
    0%, 100% {
        opacity: 0.5;
    }
    50% {
        opacity: 1;
    }
}

@keyframes connection-success {
    0% {
        transform: scale(0);
        opacity: 0;
    }
    50% {
        transform: scale(1.2);
    }
    100% {
        transform: scale(1);
        opacity: 1;
    }
}

@keyframes connection-error {
    0% {
        transform: translateX(0);
    }
    25% {
        transform: translateX(-5px);
    }
    75% {
        transform: translateX(5px);
    }
    100% {
        transform: translateX(0);
    }
}

/* Page Transitions */
.page-enter {
    animation: page-enter 0.5s ease-out;
}

.page-exit {
    animation: page-exit 0.5s ease-in;
}

@keyframes page-enter {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes page-exit {
    from {
        opacity: 1;
        transform: translateY(0);
    }
    to {
        opacity: 0;
        transform: translateY(-20px);
    }
}

/* Focus States */
.focus-visible {
    outline: 2px solid var(--accent-primary);
    outline-offset: 2px;
}

/* Reduced Motion Support */
@media (prefers-reduced-motion: reduce) {
    .loading::after {
        animation: none;
    }

    .widget.refreshing::before {
        animation: none;
    }

    .status-indicator.active {
        animation: none;
    }

    .tooltip {
        transition: none;
    }
}

/* High Contrast Mode Support */
@media (prefers-contrast: high) {
    .widget {
        border-width: 2px;
    }

    .btn-primary,
    .btn-secondary {
        border-width: 2px;
    }

    .status-dot {
        border: 1px solid var(--text-primary);
    }
}

/* Print Optimizations */
@media print {
    .loading::after,
    .widget.refreshing::before,
    .status-indicator.active {
        display: none !important;
        animation: none !important;
    }

    .tooltip::before,
    .tooltip::after {
        display: none !important;
    }
}